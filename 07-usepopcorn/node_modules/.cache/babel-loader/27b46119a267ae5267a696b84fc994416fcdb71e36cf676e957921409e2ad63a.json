{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Jonas-React-Course\\\\07-usepopcorn\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport NavBar from \"./NavBar\";\nimport Main from \"./Main\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst tempMovieData = [{\n  imdbID: \"tt1375666\",\n  Title: \"Inception\",\n  Year: \"2010\",\n  Poster: \"https://m.media-amazon.com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@._V1_SX300.jpg\"\n}, {\n  imdbID: \"tt0133093\",\n  Title: \"The Matrix\",\n  Year: \"1999\",\n  Poster: \"https://m.media-amazon.com/images/M/MV5BNzQzOTk3OTAtNDQ0Zi00ZTVkLWI0MTEtMDllZjNkYzNjNTc4L2ltYWdlXkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SX300.jpg\"\n}, {\n  imdbID: \"tt6751668\",\n  Title: \"Parasite\",\n  Year: \"2019\",\n  Poster: \"https://m.media-amazon.com/images/M/MV5BYWZjMjk3ZTItODQ2ZC00NTY5LWE0ZDYtZTI3MjcwN2Q5NTVkXkEyXkFqcGdeQXVyODk4OTc3MTY@._V1_SX300.jpg\"\n}];\nconst tempWatchedData = [{\n  imdbID: \"tt1375666\",\n  Title: \"Inception\",\n  Year: \"2010\",\n  Poster: \"https://m.media-amazon.com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@._V1_SX300.jpg\",\n  runtime: 148,\n  imdbRating: 8.8,\n  userRating: 10\n}, {\n  imdbID: \"tt0088763\",\n  Title: \"Back to the Future\",\n  Year: \"1985\",\n  Poster: \"https://m.media-amazon.com/images/M/MV5BZmU0M2Y1OGUtZjIxNi00ZjBkLTg1MjgtOWIyNThiZWIwYjRiXkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_SX300.jpg\",\n  runtime: 116,\n  imdbRating: 8.5,\n  userRating: 9\n}];\nconst average = arr => arr.reduce((acc, cur, i, arr) => acc + cur / arr.length, 0);\nexport default function App() {\n  _s();\n  const [movies, setMovies] = useState(tempMovieData);\n  const [watched, setWatched] = useState(tempWatchedData);\n  const [isOpen1, setIsOpen1] = useState(true);\n  const [isOpen2, setIsOpen2] = useState(true);\n  const avgImdbRating = average(watched.map(movie => movie.imdbRating));\n  const avgUserRating = average(watched.map(movie => movie.userRating));\n  const avgRuntime = average(watched.map(movie => movie.runtime));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"sB2uj8nfGC9QvyOs2sk94J8D7OU=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","NavBar","Main","jsxDEV","_jsxDEV","Fragment","_Fragment","tempMovieData","imdbID","Title","Year","Poster","tempWatchedData","runtime","imdbRating","userRating","average","arr","reduce","acc","cur","i","length","App","_s","movies","setMovies","watched","setWatched","isOpen1","setIsOpen1","isOpen2","setIsOpen2","avgImdbRating","map","movie","avgUserRating","avgRuntime","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Jonas-React-Course/07-usepopcorn/src/App.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport Main from \"./Main\";\r\n\r\nconst tempMovieData = [\r\n  {\r\n    imdbID: \"tt1375666\",\r\n    Title: \"Inception\",\r\n    Year: \"2010\",\r\n    Poster:\r\n      \"https://m.media-amazon.com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@._V1_SX300.jpg\",\r\n  },\r\n  {\r\n    imdbID: \"tt0133093\",\r\n    Title: \"The Matrix\",\r\n    Year: \"1999\",\r\n    Poster:\r\n      \"https://m.media-amazon.com/images/M/MV5BNzQzOTk3OTAtNDQ0Zi00ZTVkLWI0MTEtMDllZjNkYzNjNTc4L2ltYWdlXkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SX300.jpg\",\r\n  },\r\n  {\r\n    imdbID: \"tt6751668\",\r\n    Title: \"Parasite\",\r\n    Year: \"2019\",\r\n    Poster:\r\n      \"https://m.media-amazon.com/images/M/MV5BYWZjMjk3ZTItODQ2ZC00NTY5LWE0ZDYtZTI3MjcwN2Q5NTVkXkEyXkFqcGdeQXVyODk4OTc3MTY@._V1_SX300.jpg\",\r\n  },\r\n];\r\n\r\nconst tempWatchedData = [\r\n  {\r\n    imdbID: \"tt1375666\",\r\n    Title: \"Inception\",\r\n    Year: \"2010\",\r\n    Poster:\r\n      \"https://m.media-amazon.com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@._V1_SX300.jpg\",\r\n    runtime: 148,\r\n    imdbRating: 8.8,\r\n    userRating: 10,\r\n  },\r\n  {\r\n    imdbID: \"tt0088763\",\r\n    Title: \"Back to the Future\",\r\n    Year: \"1985\",\r\n    Poster:\r\n      \"https://m.media-amazon.com/images/M/MV5BZmU0M2Y1OGUtZjIxNi00ZjBkLTg1MjgtOWIyNThiZWIwYjRiXkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_SX300.jpg\",\r\n    runtime: 116,\r\n    imdbRating: 8.5,\r\n    userRating: 9,\r\n  },\r\n];\r\n\r\nconst average = (arr) =>\r\n  arr.reduce((acc, cur, i, arr) => acc + cur / arr.length, 0);\r\n\r\nexport default function App() {\r\n  const [movies, setMovies] = useState(tempMovieData);\r\n  const [watched, setWatched] = useState(tempWatchedData);\r\n  const [isOpen1, setIsOpen1] = useState(true);\r\n  const [isOpen2, setIsOpen2] = useState(true);\r\n\r\n  const avgImdbRating = average(watched.map((movie) => movie.imdbRating));\r\n  const avgUserRating = average(watched.map((movie) => movie.userRating));\r\n  const avgRuntime = average(watched.map((movie) => movie.runtime));\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,aAAa,GAAG,CACpB;EACEC,MAAM,EAAE,WAAW;EACnBC,KAAK,EAAE,WAAW;EAClBC,IAAI,EAAE,MAAM;EACZC,MAAM,EACJ;AACJ,CAAC,EACD;EACEH,MAAM,EAAE,WAAW;EACnBC,KAAK,EAAE,YAAY;EACnBC,IAAI,EAAE,MAAM;EACZC,MAAM,EACJ;AACJ,CAAC,EACD;EACEH,MAAM,EAAE,WAAW;EACnBC,KAAK,EAAE,UAAU;EACjBC,IAAI,EAAE,MAAM;EACZC,MAAM,EACJ;AACJ,CAAC,CACF;AAED,MAAMC,eAAe,GAAG,CACtB;EACEJ,MAAM,EAAE,WAAW;EACnBC,KAAK,EAAE,WAAW;EAClBC,IAAI,EAAE,MAAM;EACZC,MAAM,EACJ,oGAAoG;EACtGE,OAAO,EAAE,GAAG;EACZC,UAAU,EAAE,GAAG;EACfC,UAAU,EAAE;AACd,CAAC,EACD;EACEP,MAAM,EAAE,WAAW;EACnBC,KAAK,EAAE,oBAAoB;EAC3BC,IAAI,EAAE,MAAM;EACZC,MAAM,EACJ,oIAAoI;EACtIE,OAAO,EAAE,GAAG;EACZC,UAAU,EAAE,GAAG;EACfC,UAAU,EAAE;AACd,CAAC,CACF;AAED,MAAMC,OAAO,GAAIC,GAAG,IAClBA,GAAG,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,EAAEC,CAAC,EAAEJ,GAAG,KAAKE,GAAG,GAAGC,GAAG,GAAGH,GAAG,CAACK,MAAM,EAAE,CAAC,CAAC;AAE7D,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAG1B,QAAQ,CAACO,aAAa,CAAC;EACnD,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAACY,eAAe,CAAC;EACvD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC+B,OAAO,EAAEC,UAAU,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMiC,aAAa,GAAGjB,OAAO,CAACW,OAAO,CAACO,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACrB,UAAU,CAAC,CAAC;EACvE,MAAMsB,aAAa,GAAGpB,OAAO,CAACW,OAAO,CAACO,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACpB,UAAU,CAAC,CAAC;EACvE,MAAMsB,UAAU,GAAGrB,OAAO,CAACW,OAAO,CAACO,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACtB,OAAO,CAAC,CAAC;EAEjE,oBACET,OAAA,CAAAE,SAAA;IAAAgC,QAAA,eACElC,OAAA,CAACH,MAAM;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACV,CAAC;AAEP;AAAClB,EAAA,CAfuBD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}